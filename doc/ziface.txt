ziface(3)
=========

NAME
----
ziface - Information about network interfaces

SYNOPSIS
--------
----
//  Create a new ziface instance to take a snapshot of network interfaces
//  currently defined on the system.
CZMQ_EXPORT ziface_t *
    ziface_new (void);

//  Destroy a ziface instance
CZMQ_EXPORT void
    ziface_destroy (ziface_t **self_p);

//  Reload network interfaces from system
CZMQ_EXPORT void
    ziface_reload (ziface_t *self);

//  Return the number of network interfaces on system
CZMQ_EXPORT size_t
    ziface_size (ziface_t *self);

//  Get first network interface, return NULL if there are none
CZMQ_EXPORT const char *
    ziface_first (ziface_t *self);

//  Get next network interface, return NULL if we hit the last one
CZMQ_EXPORT const char *
    ziface_next (ziface_t *self);

//  Return the current interface IP address as a printable string
CZMQ_EXPORT const char *
    ziface_address (ziface_t *self);

//  Return the current interface broadcast address as a printable string
CZMQ_EXPORT const char *
    ziface_broadcast (ziface_t *self);

//  Return the current interface network mask as a printable string
CZMQ_EXPORT const char *
    ziface_netmask (ziface_t *self);

//  Selftest for this class
CZMQ_EXPORT void
    ziface_test (bool verbose);
----

DESCRIPTION
-----------

The ziface class takes a snapshot of the network interfaces that the
system currently supports (this can change arbitrarily, especially on
mobile devices). The caller can then access the network interface
information using an iterator that works like zlist. Only stores those
interfaces with broadcast capability, and ignores the loopback interface.


EXAMPLE
-------
.From ziface_test method
----
----

SEE ALSO
--------
linkczmq:czmq[7]
