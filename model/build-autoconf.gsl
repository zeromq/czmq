.#  Generate autoconf files for project
.#
.#  This is a code generator built using the iMatix GSL code generation
.#  language. See https://github.com/imatix/gsl for details. This script
.#  is licensed under MIT/X11.
.#
.echo "Generating src/Makefile.am.supplement..."
.output "../src/Makefile.am.supplement"
#################################################################
#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
#   Please read the README.txt file in the model directory.     #
#################################################################
lib_LTLIBRARIES = lib$(project.name).la

pkgconfig_DATA = src/lib$(project.name).pc

include_HEADERS = \\
.for header
    include/$(name).h \\
.endfor
.for class
.   if class.private ?= 1
.       class.classdir = "src"
.   else
.       class.classdir = "include"
.   endif
.   if last ()
    $(classdir)/$(name).h
.   else
    $(classdir)/$(name).h \\
.   endif
.endfor

lib$(project.name)_la_SOURCES = \\
    src/platform.h \\
.for extra
    src/$(name) \\
.endfor
.for class
.   if last ()
    src/$(name).c
.   else
    src/$(name).c \\
.   endif
.endfor

bin_PROGRAMS = $(project.name)_selftest

$(project.name)_selftest_LDADD = \\
    lib$(project.name).la

$(project.name)_selftest_SOURCES = \\
    src/$(project.name)_selftest.c

lib$(project.name)_la_LDFLAGS = \\
    -version-info @LTVER@

if ON_MINGW
lib$(project.name)_la_LDFLAGS += \\
    -no-undefined \\
    -avoid-version
endif

TESTS = $(project.name)_selftest
.for model
.   if first ()

# Produce generated models; do this manually in src directory
code:
.   endif
\tgsl -q src/$(name).xml
.endfor

#################################################################
#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
#   Please read the README.txt file in the model directory.     #
#################################################################
.echo "Generating doc/Makefile.am.supplement..."
.output "../doc/Makefile.am.supplement"
#################################################################
#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
#   Please read the README.txt file in the model directory.     #
#################################################################
.project.manpage = "$(project.name).7"
.manpages = ""
.for class where private?0 = 0
.   manpages += " $\(srcdir)/doc/$(name).3"
.   if class.name = project.name
.       project.manpage = ""
.   endif
.endfor
MAN1 =
MAN3 =$(manpages)
MAN7 = $\(srcdir)/doc/$(project.manpage)
MAN_DOC = $\(MAN1) $\(MAN3) $\(MAN7)

MAN_TXT = $\(MAN1:%.1=%.txt)
MAN_TXT += $\(MAN3:%.3=%.txt)
MAN_TXT += $\(MAN7:%.7=%.txt)

EXTRA_DIST += $\(srcdir)/doc/asciidoc.conf $\(srcdir)/doc/mkman $\(MAN_TXT)

if BUILD_DOC
if INSTALL_MAN
dist_man_MANS = $\(MAN_DOC)
endif

MAINTAINERCLEANFILES = $\(MAN_DOC)

dist-hook : $\(MAN_DOC)

SUFFIXES=.txt .xml .1 .3 .7

\.txt.xml:
\t$\(srcdir)/doc/mkman $<
\tasciidoc -d manpage -b docbook -f $\(srcdir)/doc/asciidoc.conf \\
\t\t-a$(project.name)_version=@PACKAGE_VERSION@ -o$@ $<
\.xml.1:
\txmlto -o $\(srcdir)/doc man $<
\.xml.3:
\txmlto -o $\(srcdir)/doc man $<
\.xml.7:
\txmlto -o $\(srcdir)/doc man $<
endif
#################################################################
#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
#   Please read the README.txt file in the model directory.     #
#################################################################
